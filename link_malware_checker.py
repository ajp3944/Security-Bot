'''
Uses a link given by the user to check for any malicious activity
Malicious URL Checker API: https://www.ipqualityscore.com/documentation/malicious-url-scanner-api/overview

RISK SCORE:
    >= 75 suspicious, patterns associated with malicious links
    >= 85 high risk
    = 100 AND Phishing=True OR Malware=True, malicious activity in last 24-48 hours
'''
import requests

user_url = "www.google.com" # replace
url_duex = "https://www.google.com/"

def format_url(url_to_check):
    if ":" in url_to_check:
        start = url_to_check.index(":") + 3
        updated_url = url_to_check[start:]
        return updated_url
    else:
        return url_to_check

def determine_malicious_link(url_to_check):
    updated_link = format_url(url_to_check)
    link = "https://ipqualityscore.com/api/json/url/Z2SzQ0KYr1WwxPlaSxdysIlXwfX3PcVD/" + updated_link
    response = requests.get(link).json()

    link_info = {
        "Link": url_to_check,
        "Link Check Successful": response.get("success"),
        "Unsafe": response.get("unsafe"),
        "Suspicious": response.get("suspicious"),
        "Risk Score": response.get("risk_score"),
        "Spam": response.get("spamming"),
        "Malware": response.get("malware"),
        "Phishing": response.get("phising"),
        "Adult Content": response.get("adult"),
        "IP Address": response.get("ip_address"),
        "Domain": response.get("domain"),
        "Domain Availability": response.get("parking"),
        "Server": response.get("server"),
        "Valid DNS": response.get("dns_valid"),
        "Content Type": response.get("content_type"),
        "Category of Link": response.get("category"),
    }
    return link_info

print(determine_malicious_link(user_url))
# print(determine_malicious_link(url_duex))